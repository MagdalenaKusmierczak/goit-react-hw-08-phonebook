{"version":3,"file":"static/js/637.efb6b292.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter) ||\n        contact.number.includes(filter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\nexport const Title = styled.h2`\n  margin: 0;\n  margin-bottom: 15px;\n  font-size: 30px;\n  color: black;\n`;\n","import PropTypes from 'prop-types';\nimport { Wrapper, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  return (\n    <Wrapper>\n      <Title>{title}</Title>\n      {children}\n    </Wrapper>\n  );\n};\nexport default Section;\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.array.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ContactsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n`;\nexport const ContactsTitle = styled.h2`\n  font-size: 30px;\n  margin-block: 5px;\n`;\nexport const ContactsList = styled.ul`\n  margin: 0, auto;\n  margin-bottom: 100px;\n`;\nexport const ContactElement = styled.li`\n  font-size: 22px;\n`;\nexport const DeleteBtn = styled.button`\n  border: #8ca1adde 1px solid;\n  border-radius: 5px;\n  height: 25px;\n  font-size: 16px;\n  padding-block: 5px;\n  padding-inline: 10px;\n  margin-left: 20px;\n  background-color: white;\n  &:hover {\n    background-color: #1700d4;\n    color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport {\n  ContactsWrapper,\n  ContactsTitle,\n  ContactsList,\n  ContactElement,\n  DeleteBtn,\n} from './ContactList.styled';\n\nconst ContactList = ({ children }) => {\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ContactsWrapper>\n      <ContactsTitle>Contacts</ContactsTitle>\n      {children}\n      <ContactsList>\n        {contacts.map(contact => (\n          <ContactElement key={contact.id}>\n            {contact.name}: {contact.number}\n            <DeleteBtn id={contact.id} onClick={() => handleDelete(contact.id)}>\n              Delete\n            </DeleteBtn>\n          </ContactElement>\n        ))}\n      </ContactsList>\n    </ContactsWrapper>\n  );\n};\n\nContactList.propTypes = {\n  children: PropTypes.array.isRequired,\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 400px;\n  height: 300px;\n  margin-block: 20px;\n  padding: 15px;\n  display: flex;\n  gap: 30px;\n  align-items: center;\n  flex-direction: column;\n  border: 2px black solid;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0;\n  padding: 5px;\n  font-size: 25px;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  margin: 0;\n  padding: 5px;\n  font-size: 18px;\n  border: #8ca1adde 1px solid;\n  border-radius: 5px;\n`;\nexport const SubButton = styled.button`\n  margin-top: 10px;\n  margin-left: 5px;\n  width: 125px;\n  height: 30px;\n  padding: 2px;\n  font-size: 20px;\n  cursor: pointer;\n  background-color: #0086d4;\n  border-radius: 10px;\n  border: 0px;\n  &:hover {\n    background-color: #1700d4;\n    color: white;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Form, Label, Input, SubButton } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const name = evt.target[0].value;\n    const number = evt.target[1].value;\n    const newContact = { name: name, number: number };\n    if (contacts.filter(contact => contact.name === name).length > 0) {\n      alert(name + ' is already in contacts.');\n      return;\n    }\n    dispatch(addContact(newContact));\n    evt.target.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Type name\"\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Type number\"\n        />\n      </Label>\n      <SubButton type=\"submit\">Add contact</SubButton>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0;\n  padding: 5px;\n  font-size: 25px;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  margin: 0;\n  padding: 5px;\n  font-size: 18px;\n  border: #8ca1adde 1px solid;\n  border-radius: 5px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { addFilter } from '../../redux/contacts/filterSlice';\nimport { Label, Input } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleChange = evt => {\n    const searchQuery = evt.target.value.toLowerCase();\n    dispatch(addFilter(searchQuery));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input onChange={handleChange} type=\"text\" name=\"filter\" />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../../redux/contacts/selectors';\nimport { fetchContacts } from '../../redux/contacts/operations';\n\nimport Section from 'components/Section/Section.jsx';\nimport ContactList from 'components/ContactList/ContactList.jsx';\nimport ContactForm from 'components/ContactForm/ContactForm.jsx';\nimport Filter from 'components/Filter/Filter';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Section title=\"Phonebook\">\n      <ContactForm />\n      <ContactList>\n        {isLoading && !error && <b>Request in progress...</b>}\n        <Filter />\n      </ContactList>\n    </Section>\n  );\n};\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","contact","name","toLowerCase","includes","number","Wrapper","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","_ref","title","children","_jsxs","_jsx","ContactsWrapper","ContactsTitle","ContactsList","_templateObject3","ContactElement","_templateObject4","DeleteBtn","_templateObject5","useSelector","dispatch","useDispatch","map","id","onClick","deleteContact","Form","Label","Input","SubButton","onSubmit","evt","preventDefault","target","value","newContact","length","alert","addContact","reset","type","pattern","required","placeholder","onChange","searchQuery","addFilter","useEffect","fetchContacts","Section","ContactForm","ContactList","Filter"],"sourceRoot":""}